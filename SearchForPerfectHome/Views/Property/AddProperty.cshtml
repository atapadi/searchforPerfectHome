@model SearchPerfectHome.ViewModels.PropertyViewModel
@{
    ViewBag.Title = "Add Property";
}

@using (Html.BeginForm("AddProperty", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Add Property</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.PropertyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.University, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.University, new { htmlAttributes = new { @class = "form-control", @id = "university-name" } })
                @Html.ValidationMessageFor(m => m.University, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Amenities, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Amenities, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Amenities, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Upload Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PropertyImages.files, "", new { @type = "file", @multiple = "multiple" })
                @*@Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Property" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jquery-ui")
    <script src="~/Scripts/Users/User.js"></script>
}
@Styles.Render("~/Content/property")